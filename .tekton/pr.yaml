---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: scratchmyback-pull-request
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[pull_request]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[main, master]"

    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    pipelinesascode.tekton.dev/task: "[git-clone]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)

      - name: invalid-worksapce
        taskSpec:
          steps:
            # pylint
            - name: workspace
              image: registry.access.redhat.com/ubi8/ubi-minimal:8.2
              script: |
                echo "never gonna to happen"
                workspaces:
        workspaces:
          - name: source
            workspace: source

      - name: pylint
        taskSpec:
          steps:
            # pylint
            - name: pylint
              image: registry.access.redhat.com/ubi8/ubi-minimal:8.2
              script: |
                cat <<EOF
                ************* Module test
                test.py:6:4: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)

                ------------------------------------------------------------------
                Your code has been rated at 7.50/10 (previous run: 2.50/10, +5.00)
                EOF
                exit 1

      - name: golangci-lint
        taskSpec:
          steps:
            # golangci-lint report .
            - name: golangci-lint
              image: registry.access.redhat.com/ubi8/ubi-minimal:8.2
              script: |
                cat <<EOF
                main.go:14:6: ineffectual assignment to err (ineffassign)
                _, err = strconv.Atoi(s)
                ^
                EOF
                exit 1

      - name: shellcheck
        taskSpec:
          steps:
            - name: shellcheck
              image: registry.access.redhat.com/ubi8/ubi-minimal:8.2
              # shellcheck --format=gcc test.sh
              script: |
                cat <<EOF
                test.sh:4:1: warning: a appears unused. Verify use (or export if used externally). [SC2034]
                test.sh:6:1: warning: foo appears unused. Verify use (or export if used externally). [SC2034]
                test.sh:6:5: warning: Assigning an array to a string! Assign as array, or use * instead of @ to concatenate. [SC2124]
                exit 1

      - name: yamllint
        taskSpec:
          steps:
            - name: shellcheck
              image: registry.access.redhat.com/ubi8/ubi-minimal:8.2
              # yamllint -f=parsable gosmee.yaml
              script: |
                cat <<EOF
                gosmee.yaml:27:11: [error] syntax error: could not find expected ':' (syntax)
                EOF
                exit 1

  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
